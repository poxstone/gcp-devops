steps:
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['source', 'repos', 'clone', 'app_spring', '${PROJECT_ID}', '-q']
- name: 'ubuntu'
  args: ['echo', '${PROJECT_ID} - ${REPO_NAME} - ${BRANCH_NAME} - ${TAG_NAME} - ${REVISION_ID} - ${COMMIT_SHA} - ${SHORT_SHA}']
- name: 'gcr.io/cloud-builders/gradle'
  args: ['-p', 'app_spring/complete/', 'build']
- name: 'ubuntu'
  args: ['bash', './auto_prepare.sh', '${PROJECT_ID}', '${COMMIT_SHA}']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/app_sprig:${COMMIT_SHA}', '-f', './docker/Dokerfile', '.']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/${PROJECT_ID}/app_sprig:${COMMIT_SHA}']
- name: 'gcr.io/cloud-builders/kubectl'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-east1-d'
  - 'CLOUDSDK_CONTAINER_CLUSTER=k8s-app'
  args: ['apply', '-f', 'kubernetes_files/app_spring.yaml']

images: ['gcr.io/${PROJECT_ID}/app_sprig:${COMMIT_SHA}']